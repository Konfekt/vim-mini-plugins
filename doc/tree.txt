*tree.txt* tree


TREE - TABLE OF CONTENTS                                            *tree.vim*
==============================================================================

  Usage..............................................|tree-usage|
  Commands...........................................|tree-commands|
  Plugs..............................................|tree-plugs|
  Project drawer mode................................|tree-project-drawer|
  Settings...........................................|tree-settings|



USAGE                                                             *tree-usage*
==============================================================================

  It's a wrapper for the `tree` executable that works as file browser that
  shows the directories structure. Mostly working on UNIX-like systems only.




COMMANDS                                                       *tree-commands*
==============================================================================
                                                              *:Tree* *:PTree*
  <mods> Tree[!] [args]~

  `:Tree`         start in an horizontal split
  `:Tree!`        start in the current window
  `:vert Tree`    start in a vertical split
  `:tab Tree`     start in a new tab
  `:PTree`        start |tree-project-drawer|

  All commands accept the same kind of switches that the `tree` command
  accepts. See `man tree` in the shell.




PLUGS                                                             *tree-plugs*
==============================================================================

  <Plug>(Tree-Split)      same as `:Tree`
  <Plug>(Tree-Vsplit)     same as `:vert Tree`
  <Plug>(Tree-Here)       same as `:Tree!`
  <Plug>(Tree-Project)    same as `:PTree`

  Example mappings:
>
    nmap -+ <Plug>(Tree-Here)
    nmap -V <Plug>(Tree-Vsplit)
    nmap -S <Plug>(Tree-Split)
    nmap -P <Plug>(Tree-Project)
<
  Inside the |tree| window many <buffer> mappings are defined, for navigation
  and item selection.

  Press <F1> in the |tree| window to display them.




PROJECT DRAWER MODE                                        *tree-project-mode*
==============================================================================

  If started with the |:PTree| command, |tree| will run in project drawer
  mode, that is, the |tree| window will be placed on the left, with a fixed
  50-columns width.

  In this mode, selecting an item with <CR>, instead of opening the file in
  the same window as usual, will open it in the next window, then the cursor
  will be brought back to the |tree| window.

  Running the `:PTree` command will close any open `Tree` buffer. If there was
  not an open |PTree| buffer, it will be opened. Otherwise, the `PTree` buffer
  will be toggled.




SETTINGS                                                       *tree-settings*
==============================================================================

  Default: ''                                         *g:tree_default_options*

    The options/switches to be passed to the `tree` command by default.


  Default: 2                                            *g:tree_default_depth*

    Sets the `-L` switch of the `tree` command.


  Default: 1                                      *g:tree_syntax_highlighting*

    Set to 0 to disable syntax highlighting in the tree buffer.





==============================================================================
vim:tw=78:sw=2:ts=2:ft=help:norl:et:fen:fdl=0:
